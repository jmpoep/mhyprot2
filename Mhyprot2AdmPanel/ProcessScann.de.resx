<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>707, 30</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Sie können den Genshin Impact-Kernel verwenden, um OPCODES-Muster im Speicher zu finden (genau wie ein Antivirenprogramm).
Sie verwenden es, um nach verbotenen, extern geladenen Programmen wie Trainern zu suchen</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>263, 15</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Geben Sie den Prozessnamen ein, um zu suchen:</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>226, 15</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Basisadresse im Speicher (MODULEBASE):</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>208, 15</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Größe des Prozessabbilds im Speicher:</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>261, 15</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Wählen Sie ein Abonnement aus, um zu suchen:</value>
  </data>
  <data name="button1.Text" xml:space="preserve">
    <value>Amüsiere mich</value>
  </data>
  <data name="label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>560, 45</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>! Wenn Sie nach einem Verfahren gefragt werden, um nach Mustern von Opcodes im Speicher zu suchen,
ein Systemthread wird erstellt und es kann eine Weile dauern, bis er abgeschlossen ist.
Ich gehe von folgender Zeit aus: X(GB oder MB) * 0,0001, diese Prozedur ist asynchron.</value>
  </data>
</root>